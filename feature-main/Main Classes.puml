@startuml
'https://plantuml.com/class-diagram
skinparam defaultFontSize 32
skinparam ArrowFontSize 20

package shared.feature {
	class FeatureStoreFactory
	class FeatureStore
	interface FeatureComp
	class FeatureExecutor
	class FeatureComponent
	class Output
	FeatureComponent : componentContext: ComponentContext
}

package shared.main {
	interface RootComp
	class RootComponent
	RootComponent : createChild(configuration) : Child
	class StackNavigation<Configuration>
	object OutputHandler {
	~ navigation
	~ onFeatureOutput()
	}
	class Child <<sealed>>
	class Configuration <<sealed>>

	circle createComponent <<internal function>>
}

package main {
	class RootActivity
	class RootContent <<Composable>>
}

package feature {
	class Screen <<Composable>>
}

shared.feature <-[hidden]down- shared.main
feature <-[hidden]down- main
shared.main <-[hidden]down- main
RootComponent <-[hidden]down- feature
FeatureComponent <-[hidden]down- Configuration

RootComp <|-- RootComponent
FeatureStore *-- FeatureStoreFactory : creates
FeatureExecutor *-- FeatureStoreFactory : contains
FeatureComponent *-- Child : contains
FeatureComponent *-- Screen : contains
FeatureExecutor *-- FeatureComponent : contains
FeatureStore *-- FeatureComponent : contains
FeatureStoreFactory *-- FeatureComponent : uses
FeatureComp <|-- FeatureComponent
FeatureComp <.. createComponent : creates
FeatureComponent <.. createComponent : creates
FeatureExecutor <.. createComponent : uses
Child <.. RootComponent : creates
Configuration <.. RootComponent : receives
Child <.. RootContent : receives
Output <.. OutputHandler::onFeatureOutput : receives
Output <.. FeatureComponent : emits
Configuration <.. OutputHandler::onFeatureOutput : creates
OutputHandler::onFeatureOutput <.. RootComponent : uses
createComponent <.. RootComponent : uses
OutputHandler::navigation <.. OutputHandler::onFeatureOutput : adds Config to stack
Screen <.. RootContent : adds to stack
RootComp <|-- RootContent
RootComponent *-- RootActivity : contains
RootContent <|-- RootActivity
StackNavigation <|-- OutputHandler::navigation

@enduml